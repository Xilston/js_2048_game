{"mappings":"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","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n/* eslint-disable */\n// #region globalVars\nconst gameTable = document.getElementById('game-table');\nconst tableRows = gameTable.getElementsByTagName('tr');\nconst start = document.getElementById('start');\nconst messageStart = document.getElementById('message-start');\nconst messageWin = document.getElementById('message-win');\nconst messageLose = document.getElementById('message-lose');\nconst gameScore = document.getElementById('game-score');\n// #endregion\n\n// #region game\n\nclass Game {\n  constructor() {\n    this.size = 4;\n    this.chipsArray = [];\n    this.status = false;\n    this.score = 0;\n    this.win = false;\n    this.gameOver = false;\n  }\n\n  startGame() {\n    this.status = true;\n    this.chipsArray = [];\n    this.score = 0;\n    this.win = false;\n    this.gameOver = false;\n\n    for (let i = 0; i < this.size; i++) {\n      const row = [];\n      for (let j = 0; j < this.size; j++) {\n        row.push( new Chip(0));\n      }\n      this.chipsArray.push(row);\n    }\n\n    for (let i = 0; i < 2; i++) {\n      this.addChip(new Chip(gen2or4()));\n    }\n  }\n\n  addChip(chip) {\n    const freeSpaces = findFreeSpaces(this.chipsArray);\n\n    if (freeSpaces.length) {\n      const { x, y } = genRandomPosition(freeSpaces);\n\n      this.chipsArray[y][x] = chip;\n    } else {\n      console.log('no free space');\n    }\n  }\n\n  restart() {\n    this.startGame();\n  }\n\n  moveLeft() {\n    const chips = this.chipsArray;\n    let isMove = false;\n\n    for (let i = 0; i < chips.length; i++) {\n      for (let j = 1; j < chips.length; j++) {\n        const current = chips[i][j];\n\n        if (current.value !== 0) {\n          let targetCellIndex = j - calcTargetCellIndex(j, chips[i], 'left');\n          const moved = this.moveTiles(current, chips[i][targetCellIndex]);\n\n          if (moved === true && isMove === false) {\n            isMove = true;\n          }\n        }\n      }\n    }\n\n    if (isMove === true) {\n      this.addChip(new Chip(gen2or4()));\n    } else {\n      this.isGameOver();\n    }\n\n    this.resetTiles();\n  };\n\n  moveUp() {\n    const chips = this.chipsArray;\n    let isMove = false;\n\n    for (let i = 1; i < chips.length; i++) {\n      for (let j = 0; j < chips.length; j++) {\n        const current = chips[i][j];\n\n        if (current.value !== 0) {\n          let targetCellIndex = i - calcTargetCellIndex({y: i, x: j}, chips, 'up');\n          const moved = this.moveTiles(current, chips[targetCellIndex][j]);\n\n          if (moved === true && isMove === false) {\n            isMove = true;\n          }\n        }\n      }\n    }\n\n    if (isMove === true) {\n      this.addChip(new Chip(gen2or4()));\n    } else {\n      this.isGameOver();\n    }\n\n    this.resetTiles();\n  };\n\n  moveDown() {\n    const chips = this.chipsArray;\n    let isMove = false;\n\n    for (let i = this.size - 2; i >= 0; i--) {\n      for (let j = 0; j < chips.length; j++) {\n        const current = chips[i][j];\n\n        if (current.value !== 0) {\n          let targetCellIndex = i + calcTargetCellIndex({y: i, x: j}, chips, 'down');\n          const moved = this.moveTiles(current, chips[targetCellIndex][j]);\n\n          if (moved === true && isMove === false) {\n            isMove = true;\n          }\n        }\n      }\n    }\n\n    if (isMove === true) {\n      this.addChip(new Chip(gen2or4()));\n    } else {\n      this.isGameOver();\n    }\n\n    this.resetTiles();\n  };\n\n  moveRight() {\n    const chips = this.chipsArray;\n    let isMove = false;\n\n    for (let i = 0; i < this.size; i++) {\n      for (let j = this.size - 2; j >= 0; j--) {\n        const current = chips[i][j];\n\n        if (current.value !== 0) {\n          let targetCellIndex = j + calcTargetCellIndex(j, chips[i], 'right');\n          const moved = this.moveTiles(current, chips[i][targetCellIndex]);\n\n          if (moved === true && isMove === false) {\n            isMove = true;\n          }\n        }\n      }\n    }\n\n    if (isMove === true) {\n      this.addChip(new Chip(gen2or4()));\n    } else {\n      this.isGameOver();\n    }\n\n    this.resetTiles();\n  };\n\n  moveTiles(currentTile, nextTile) {\n    if (currentTile !== nextTile) {\n      const res = nextTile.merge(currentTile);\n      game.score += res;\n\n      if (res === 2048) {\n        this.win = true;\n      }\n\n      return true;\n    }\n\n    return false;\n  };\n\n  isGameOver() {\n    let over = true;\n\n    for (let i = 0; i < this.size; i++) {\n      for (let j = 0; j < this.size; j++) {\n        const currentTile = this.chipsArray[i][j];\n\n        const closestTiles = Game.getClosestTiles(i, j, this.chipsArray);\n        over = closestTiles.every(\n          tile => tile.value !== currentTile.value\n          );\n        if (over === false) {\n          this.gameOver = false;\n\n          return over;\n        }\n      }\n    }\n\n    this.gameOver = true;\n    return true;\n  }\n\n  resetTiles() {\n    for (let i = 0; i < this.size; i++) {\n      for (let j = 0; j < this.size; j++) {\n        this.chipsArray[i][j].resetMerge();\n      }\n    }\n  }\n\n  static getClosestTiles(i, j, arr) {\n    const res = [];\n\n    if (j > 0) {\n      res.push(arr[i][j - 1]);\n    }\n\n    if (j < arr[0].length - 1) {\n      res.push(arr[i][j + 1]);\n    }\n\n    if (i > 0) {\n      res.push(arr[i - 1][j]);\n    }\n\n    if (i < arr.length - 1) {\n      res.push(arr[i + 1][j]);\n    }\n\n    return res;\n  }\n}\n\nclass Chip {\n  constructor(num) {\n    this.value = num;\n    this.ableToUnion = true;\n  }\n\n  merge(chip) {\n    let res = 0;\n\n    if (this.value === 0 || this.value === chip.value) {\n      if (this.value > 0 && chip.value > 0) {\n        res += this.value + chip.value;\n        this.ableToUnion = false;\n      }\n\n      this.value += chip.value;\n\n      chip.value = 0;\n    }\n\n    return res;\n  }\n\n  resetMerge() {\n    this.ableToUnion = true;\n  }\n}\n// #endregion\n\nconst game = new Game();\n\n// #region pageFunc\nstart.addEventListener('click', () => {\n  if (game.status === false) {\n    startGame();\n    syncWithTable();\n\n    messageStart.classList.add('hidden');\n\n    start.classList.remove('start');\n    start.classList.add('restart');\n    start.innerText = 'restart';\n  } else {\n    clearTable();\n    restartGame();\n    messageWin.classList.add('hidden');\n    messageLose.classList.add('hidden');\n  }\n});\n\ndocument.addEventListener('keydown', (event) => {\n  if (game.status === true) {\n    switch (event.key) {\n      case 'ArrowUp':\n        game.moveUp();\n        syncWithTable();\n        break;\n      case 'ArrowDown':\n        game.moveDown();\n        syncWithTable();\n        break;\n      case 'ArrowLeft':\n        game.moveLeft();\n        syncWithTable();\n        break;\n      case 'ArrowRight':\n        game.moveRight();\n        syncWithTable();\n        break;\n      default:\n    }\n  }\n});\n\nfunction syncWithTable() {\n  const chips = game.chipsArray;\n\n  for (let i = 0; i < chips.length; i++) {\n    for (let j = 0; j < chips[i].length; j++) {\n      const cell = tableRows[i].children[j];\n      const chip = chips[i][j];\n      const prevChipValue = cell.innerText;\n      const merge = prevChipValue * 2 === chip.value ? 'merged ' : '';\n\n      if (chip.value !== 0) {\n        cell.innerHTML = chip.value;\n        cell.className = `field-cell ${merge}field-cell--${chip.value}`;\n      } else {\n        cell.innerHTML = '';\n        cell.className = 'field-cell';\n      }\n    }\n  }\n\n  gameScore.innerText = game.score;\n\n  if (game.win) {\n    messageWin.classList.remove('hidden');\n  }\n\n  if (game.gameOver) {\n    messageLose.classList.remove('hidden');\n  }\n}\n\nfunction clearTable() {\n  for (let i = 0; i < tableRows.length; i++) {\n    for (let j = 0; j < tableRows.length; j++) {\n      const cell = tableRows[i].children[j];\n\n      cell.innerHTML = '';\n      cell.className = 'field-cell';\n    }\n  }\n}\n\nfunction startGame() {\n  game.startGame();\n}\n\nfunction restartGame() {\n  game.restart();\n  syncWithTable();\n}\n\n// #endregion\n\n// #region heplFunc\nfunction gen2or4(zero) {\n  const numsArr = [2, 2, 2, 2, 2, 2, 2, 2, 2, 4];\n\n  if (zero === 0) {return 0}\n\n  return numsArr[Math.floor(Math.random() * 10)];\n}\n\nfunction findFreeSpaces(arr) {\n  const freeSpacesArr = [];\n\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = 0; j < arr[i].length; j++) {\n      const freeCell = {\n        x: null, y: null,\n      };\n\n      if (arr[i][j].value === 0) {\n        freeCell.x = j;\n        freeCell.y = i;\n\n        freeSpacesArr.push(freeCell);\n      }\n    }\n  }\n\n  return freeSpacesArr;\n}\n\nfunction genRandomPosition(positionsArr) {\n  const min = 0;\n  const max = positionsArr.length;\n\n  const randPos = Math.floor(Math.random() * (max - min) + min);\n\n  return positionsArr[randPos];\n}\n\n/* function calcFreeCount(currenIndex, targetArray) {\n  let result = 0;\n\n  for (let i = currenIndex - 1; i >= 0; i--) {\n    if (targetArray[i] === 0) {\n      result++;\n    } else {\n      return result;\n    }\n  }\n\n  return result;\n} */\n\nfunction calcTargetCellIndex(currIndex, array, direction) {\n  let res = 0;\n\n  if (direction === 'left') {\n    for (let i = currIndex - 1; i >= 0; i--) {\n      if (array[i].value === 0) {\n        res++;\n      } else {\n        if (array[i].value === array[currIndex].value && array[i].ableToUnion) {\n          res++;\n        } else {\n        return res;\n        }\n      }\n    }\n  }\n\n  if (direction === 'up') {\n    const {y, x} = currIndex;\n\n    for (let i = y - 1; i >= 0; i--) {\n      if (array[i][x].value === 0) {\n        res++;\n      } else {\n        if (array[i][x].value === array[y][x].value && array[i][x].ableToUnion) {\n          res++;\n        } else {\n        return res;\n        }\n      }\n    }\n  }\n  if (direction === 'down') {\n    const {y, x} = currIndex;\n\n    for (let i = y + 1; i < array.length; i++) {\n      if (array[i][x].value === 0) {\n        res++;\n      } else {\n        if (array[i][x].value === array[y][x].value && array[i][x].ableToUnion) {\n          res++;\n        } else {\n        return res;\n        }\n      }\n    }\n  }\n\n  if (direction === 'right') {\n    for (let i = currIndex + 1; i < array.length; i++) {\n      if (array[i].value === 0) {\n        res++;\n      } else {\n        if (array[i].value === array[currIndex].value && array[i].ableToUnion) {\n          res++;\n        } else {\n        return res;\n        }\n      }\n    }\n  }\n\n\n  return res;\n}\n\n// #endregion\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}